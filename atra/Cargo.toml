[package]
name = "atra"
version = "0.1.2"
edition = "2021"

# https://en.wikipedia.org/wiki/Erigone_atra

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(RUSTC_IS_NIGHTLY)'] }

[dependencies]
# Basics
regex.workspace = true
rand.workspace = true
itertools.workspace = true
url = { workspace = true, features = ["serde"] }
const_format.workspace = true
cfg-if.workspace = true

# Async
tokio = { version="1.35", features = ["rt-multi-thread", "macros", "time", "io-util", "signal", "sync"] }
tokio-stream = "0.1"
tokio-util = "0.7"
#async-channel.workspace = true

# Downloading data
reqwest = { workspace = true, features = ["brotli", "gzip", "deflate", "stream", "cookies"] }
reqwest-middleware = "0.3"
http-cache-reqwest = "0.14"
ua_generator = "0.5"
tempfile = "3"



# Configuration and Init
clap = { version = "4", features = ["derive"] }
config.workspace = true

# On disk
queue-file = "1.4"
rocksdb = { version = "0", features = ["multi-threaded-cf" ] }
camino = { workspace = true, features = ["serde1"] }
camino-tempfile.workspace = true

# Serialisation
serde = { workspace = true, features = ["derive", "rc"] }
serde_json.workspace = true
serde_bytes = "0.11"
bincode.workspace = true

# Hashing
twox-hash = "1.6"

# Encoding
data-encoding = "2.5"

# Identifier
uuid = { version = "1.7", features = ["serde", "v4", "v5", "fast-rng"] }
time = { workspace = true, features = ["serde", "serde-human-readable", "formatting"] }

# Special Types
deranged = { version = "0.3", features = ["serde"] }

# Pattern Matching
memchr.workspace = true

# Float
float-cmp.workspace = true

# Memory stuff
smallvec = { workspace = true, features = ["serde", "const_new", "const_generics", "union"] }
compact_str = { workspace = true, features = ["serde", "bytes"] }
#case_insensitive_string = { workspace = true, features = ["serde"] }

# Data structures
indexmap = "2"
moka = { version = "0.12", features = ["future"] }
bytes = { workspace = true }
#enum-map = {workspace = true, features = ["serde"]}

# Delegating
delegate.workspace = true

# Enum extensions
strum = { workspace = true, features = ["derive"] }
num_enum.workspace = true
#enum-iterator.workspace = true

# Bits and bytes
ubyte.workspace = true
byteorder.workspace = true

# Macros
paste.workspace = true
sealed = "0"

# Logging
log = { workspace = true, features = ["serde"] }
log4rs = { version = "1.3" }

# Enviroment
num_cpus = "1"
sys-info = "0.9"

# Errors
thiserror.workspace = true
anyhow.workspace = true

# Cluster
# https://crates.io/crates/paxakos

# HTML Parsing
html5ever = "0"
ego-tree = "0"

# Scraping
scraper = "0.20"
selectors = "0.25"
texting_robots = "0.2"
sitemap = "0.4"
linkify = "0.10"
ress = "0"
psl = "2"
#data-url = "0.3"

# Type System
mime.workspace = true
file-format = { workspace = true, features = ["reader", "serde", "extended-enums", "from-all"] }


# String Encodings
encoding_rs = { workspace = true, features = ["serde"] }
chardetng.workspace = true

# WARC
warc = { workspace = true, features = ["atra-fieldnames"] }

# Parsing
nom.workspace = true

# Archive
tar = "0.4"
zip = "2"


# JavaScript
#deno_core.workspace = true

# Text processing
unicode-normalization.workspace = true
unicode-segmentation.workspace = true
text_processing.workspace = true

## Stemming of data
rust-stemmers.workspace = true
isolang = { workspace = true, features = ["serde", "english_names", "local_names", "lowercase_names"] }
iso_stopwords.workspace = true

# File formats
csv = { version = "1.3" }
xml = "0.8"
rtf-parser = "0.3"

# Languages
whatlang = { version = "0.16", features = ["serde"] }

# SVM
liblinear = { workspace = true, features = ["serde"] }
svm.workspace = true

# Console
console = {workspace = true}
dialoguer = {workspace = true}
indicatif = {workspace = true}

[target.'cfg(windows)'.dependencies]
link_scraper = { version = "0.2", features = ["plaintext", "xml", "xlink", "svg", "ooxml", "odf", "rtf", "image"] }

[target.'cfg(not(windows))'.dependencies]
link_scraper = { version = "0.2", features = ["pdf", "plaintext", "xml", "xlink", "svg", "ooxml", "odf", "rtf", "image"] }

# TOR
# libtor-sys = "47.13.0"
# torut = "0.2.1"

[dev-dependencies]
scopeguard.workspace = true
mockall.workspace = true
lipsum.workspace = true


[build-dependencies]
rustc_version = "0"
